h1. Ανάλυση συστήματος Roommate

__Παρουσιάζουμε παρακάτω την λεπτομερή ανάλυση του λογισμικού μας με σειρά__:
# __Use case diagram__ 
# __Activity diagrams__
# __Ανάλυση απαιτήσεων__
# __Domain model__

h2. 1.Use case diagram/Διάγραμμα περιπτώσεων χρήσης

!Main_Use_Case.jpg!

h2. 2.Activity Diagrams/Διαγράμματα Δραστηριοτήτων 

__Οι δραστηριότητες που επιλέξαμε είναι οι εξής:__ 

h3. 2.1.Request Managment/Διαχείριση αιτήματος

!Activity(D5)_RequestManagment.jpg!

h3. 2.2.Advertisment Publication / Δημοσίευση Αγγελίας

!ActivityD1(DhmosieushAggelias).jpg!

h3. 2.3.Request for cohabit / Υποβολή Αιτήματος Συγκατοίκησης

!Activity_Request_RoommateUPDATE.jpg!


h2. 3.Use Case Descritpion /Περιγραφή Περιπτώσεων Χρήσης

h3. 3.1. __Δημοσίευση Αγγελίας__ 

<blockquote style="color:black;">	
	*Πρωτεύον Actor:* Resident
	
	*Ενδιαφερόμενοι:* O Resident θέλει να δημοσιεύει την αγγελία του σπιτιού του για να βρει συγκάτοικο.
	
	*Προϋποθέσεις:* Ο Resident έχει ταυτοποιήθει από το Σύστημα. 
	
	*Βασική Ροή:*
		<blockquote style="color:black;">
			1.	O Resident δημιουργεί μια νέα αγγελία.
			2.	Το Σύστημα εμφανίζει την φόρμα της αγγελίας.
			3.	Ο Resident εισάγει τα στοιχεία του σπιτιού.
			4.	Ο Resident ολοκληρώνει την συμπλήρωση των στοιχείων.
			5.	Το Σύστημα καταχωρεί τα στοιχεία.
			6.	Το Σύστημα εμφανίζει την φόρμα προτιμήσεων για εύρεση συγκατοίκου.
			7.	Ο Resident εισάγει της προτιμήσεις του συγκατοίκου.
			8.	O Resident υποβάλει την αγγελία
			9.	Το Σύστημα καταχωρεί την αγγελία και εμφανίζει τους υποψήφιους συγκατοίκους (Flatmates).
		</blockquote>
		
	*Ενναλακτική Ροή:*
		<blockquote style="color:black;">
			* *Tο Σύστημα οποιαδήποτε στιγμή καταρρέει.* 
			1.	O Resident εκκινεί το Σύστημα.
			2.	Το Σύστημα ταυτοποιεί τον χρήστη.
			3.	To Σύστημα εμφανίζει την Αγγελία στο στάδιο που ήταν πριν καταρρεύσει το σύστημα.
			<blockquote style="color:black;">
			3α. Το Σύστημα δεν μπορεί να ανακτήσει την αγγελία.
				<blockquote style="color:black;">
				1.	Ο Resident μεταβαίνει στην δημιουργία αγγελίας.
				</blockquote>	
			</blockquote>	
			4α. Ο Resident εισάγει λάθος στοιχεία ή παραλείπει υποχρεωτικό πεδίο της φόρμας σπιτιού.
			  <blockquote style="color:black;">
			  1.Το Σύστημα επαναφέρει την φόρμα σπιτιού με τα ήδη συμπληρωμένα στοιχεία.
			  </blockquote>
			8α. Ο Resident εισάγει λάθος στοιχεία ή παραλείπει υποχρεωτικό πεδίο της φόρμας προτιμήσεων Συγκατοίκου.
			  <blockquote style="color:black;">
			  1.Το Σύστημα επαναφέρει την φόρμα προτιμήσεων Συγκατοίκου με τα ήδη συμπληρωμένα στοιχεία.
			  </blockquote>   	
		</blockquote>	
		
		
</blockquote>

h3. 3.2 __Διαχείριση Αιτήματος Συγκατοίκησης__  

<blockquote style="color:black;">	
	*Πρωτεύον Actor:* Resident
	
	*Ενδιαφερόμενοι:* O Resident θέλει να διαχειρίζεται τα αιτήματα των υποψήφιων συγκατοίκων του.
	
	*Προϋποθέσεις:* Ο Resident έχει ταυτοποιήθει από το Σύστημα. 
	
	*Βασική Ροή:*
		<blockquote style="color:black;">
			1.	O Resident επιλέγει την προβολή των αιτημάτων του.
			2.	Το Σύστημα εμφανίζει τα διαθέσιμα αιτήματα.
			3.	O Resident επιλέγει το αίτημα που θέλει να επεξεργαστεί.
			4.	Ο Resident αποδέχεται το αίτημα.
			5.	Το Σύστημα στέλνει ειδοποίηση για την αποδοχή του αιτήματος στον Flatmate.

		</blockquote>
		
	*Ενναλακτική Ροή:*
		<blockquote style="color:black;">
			* *Tο Σύστημα οποιαδήποτε στιγμή καταρρέει.* 
			1.	O Resident εκκινεί το Σύστημα.
			2.	Το Σύστημα ταυτοποιεί τον χρήστη.
			3.	O Resident επιλέγει την προβολή των αιτημάτων του.
			4.	Το Σύστημα προβάλει ξανά τα αιτήματα.

			<blockquote style="color:black;">
			1α. Δεν υπάρχουν διαθέσιμα αιτήματα.				
				<blockquote style="color:black;">
				1.Το Σύστημα εμφανίζει ότι δεν υπάρχει κανένα αίτημα.
				</blockquote>	
			</blockquote>	
			3α.Το αίτημα έχει ακυρωθεί από τον υποψήφιο συγκάτοικο την στιγμή της επεξεργασίας.
			  <blockquote style="color:black;">
			  1.Το Σύστημα εμφανίζει μήνυμα ότι το αίτημα ακυρώθηκε και δεν μπορεί πλέον να επεξεργαστεί και επιστρέφει στην προβολή των αιτημάτων.
			  </blockquote>  	
		</blockquote>	
		
		
</blockquote>



h3. 3.3 __Ταυτοποίηση Χρήστη__   

<blockquote style="color:black;">   

    *Πρωτεύων actor:* Roommate

    *Ενδιαφερόμενοι:* O Roommate θέλει να αποκτήσει πρόσβαση στις λειτουργίες του συστήματος.
	
    *Βασική Ροή:*  
    <blockquote style="color:black;">
			1.	Το σύστημα παρουσιάζει τη φόρμα εισαγωγής ,όπου ζητά από το χρήστη να δώσει το username και το password.
			2.	Ο Roommate εισάγει τα στοιχεία ταυτοποίησης.
			3.	Το σύστημα ελέγχει ότι τα στοιχεία αντιστοιχούν σε κάποιο υπάρχοντα χρήστη.
			4.	Ο Roommate εισέρχεται στο σύστημα αποκτώντας πρόσβαση στη λειτουργικότητα του ρόλου που έχει ο χρήστης  (ως Resident ή ως Flatmate).
	</blockquote> 

    *Εναλλακτικές Ροές:*
    <blockquote style="color:black;">

    	<blockquote style="color:black;">

			* *Tο Σύστημα οποιαδήποτε στιγμή καταρρέει.* 
			1.	O Roommate εκκινεί το Σύστημα. 
			2.	Ο Roommate εισάγει τα στοιχεία ταυτοποίησης
		</blockquote> 

			<blockquote style="color:black;">
  			4α. Ο Roommate εισάγει λάθος στοιχεία .
  				<blockquote style="color:black;">
           		1.Το Σύστημα εμφανίζει μήνυμα λάθους.
           	</blockquote>
           		</blockquote>
           	<blockquote style="color:black;">
  			4β. Τα στοιχεία που εισάγει ο Roommate δεν υπάρχουν στο Σύστημα.
  				<blockquote style="color:black;">
           		1. Το Σύστημα εμφανίζει το κατάλληλο μήνυμα.
           		2. Το Σύστημα εμφανίσει την φόρμα εγγραφής.
           	</blockquote>
           		</blockquote>
    </blockquote> 
</blockquote> 

h3. 3.4 __Διαχείριση Προσωπικών Στοιχείων__ 

<blockquote style="color:black;">   

    *Πρωτεύων Αctor:* Resident

    *Ενδιαφερόμενοι:*
     Ο Resident θέλει να διαχειρίζεται τα στοιχεία του και να μπορεί να τα επεξεργαστεί.

    *Προϋποθέσεις:* 
    Ο Resident έχει ταυτοποιήθει από το Σύστημα. 

<blockquote style="color:black;">
    *Βασική Ροή*

    *Α)Επικαιροποίηση Στοιχείων Αγγελίας*
	<blockquote style="color:black;">
			1.	Ο Resident επιλέγει την αγγελία.
			
			2.	Το Σύστημα εμφανίζει τα στοιχεία της Αγγελίας.
			
			3.	Ο Resident τροποποιεί τα στοιχεία της Αγγελίας.
			
			4.	Το Σύστημα καταχωρεί και αποθηκεύει τις αλλαγές της Αγγελίας.
	</blockquote>
</blockquote>

    *Εναλλακτικές Ροές*
    <blockquote style="color:black;">
		<blockquote style="color:black;">

			* *Tο Σύστημα οποιαδήποτε στιγμή καταρρέει.* 
			
			1.	O Resident εκκινεί το Σύστημα.
			
			2.	Το Σύστημα ταυτοποιεί τον χρήστη
			
			3.	Ο Resident μεταβαίνει στην Διαχείριση Προσωπικών Στοιχείων.
			
			1-3α. Ο Resident μπορεί να ακυρώσει την ενημέρωση της αγγελίας.
		</blockquote>
	<blockquote style="color:black;">
	*Β)Επικαιροποίηση Στοιχείων Προφίλ*
		<blockquote style="color:black;">
			<blockquote style="color:black;">
			1.	Ο Resident επιλέγει την καρτέλα προφίλ.
			
			2.	To Σύστημα εμφανίζει τα στοιχεία του.
			
			3.	Ο Resident τροποποιεί τα στοιχεία του.
			
			4.	Το Σύστημα αποθηκεύει τα στοιχεία του Resident.
			</blockquote>
			<blockquote style="color:black;">
			
			1-3α. Ο Resident μπορεί να ακυρώσει την ενημέρωση του Προφίλ.
			</blockquote>
			</blockquote>
		</blockquote>
	</blockquote>
	<blockquote style="color:black;">
	*Β)Διαγραφή Αγγελίας*
		<blockquote style="color:black;">
			1.	O Resident επιλέγει την διαγραφή της Αγγελίας.
			
			2.	Το Σύστημα εμφανίζει μήνυμα επιβεβαίωσης
			
			3.	Ο Resident επιβεβαιώνει την διαγραφή.
			
			4.	Το Σύστημα διαγράφει την Αγγελία.
		</blockquote>
	</blockquote>
</blockquote>
</blockquote>

h3. 3.5 __Διαχείριση Στοιχείων Προφίλ__  

<blockquote style="color:black;">   
    *Πρωτεύων actor:* Flatmate

    *Ενδιαφερόμενοι:* Flatmate: Ο Flatmate θέλει να μπορεί να διαχειρίζεται τα προσωπικά του στοιχεία και να τα επεξεργάζεται.

    
    *Προυποθέσεις:* 
    
    O Flatmate έχει ταυτοποιηθεί από το σύστημα.

    
    *Βασική Ροή:* 
	<blockquote style="color:black;">   
			1.	Ο Flatmate  επιλέγει την επεξεργασία προφίλ.
			
			2.	Το σύστημα επιστρέφει τα στοιχεία του προφίλ του.
			
			3.	O Flatmate τροποποιεί τα στοιχεία του προφίλ του συμπεριλαμβανομένων και των προτιμήσεων του.
			
			4.	Το σύστημα καταχωρεί και αποθηκεύει τα στοιχεία του.
	</blockquote>

    *Εναλλακτικές Ροές:*
    <blockquote style="color:black;">
    	<blockquote style="color:black;">
			* *Tο Σύστημα οποιαδήποτε στιγμή καταρρέει.* 

			1.	Ο Flatmate εκκινεί το Σύστημα.
			2.	Το Συστήμα ταυτοποιεί τον Flatmate.
			3.	Ο Flatmate μεταβαίνει στην Διαχείριση Προφίλ
			4.	Το Σύστημα εμφανίζει τα στοιχεία προφίλ στον Flatmate.
		</blockquote>
			<blockquote style="color:black;">
    		3γ. Ο Flatmate βάζει λάθος στοιχεία στο προφίλ του. 
    			<blockquote style="color:black;">
				1.	Το Σύστημα ενημερώνει τον χρήστη για τα λάθος πεδία τιμών.
				2.	Η διαδικασία τερματίζει.
				</blockquote>
			</blockquote>
			<blockquote style="color:black;">
			4α . Το Σύστημα αδυνατεί να εμφανίσει τα στοιχεία στον χρήστη
			<blockquote style="color:black;">
				1.	Το σύστημα ενημερώνει το χρήστη ότι δεν μπορεί να εμφανίσει τα στοιχεία του χρήστη.
				2.	Η διαδικασία επεξεργασίας προφίλ τερματίζει. 
			</blockquote>
			</blockquote>
			<blockquote style="color:black;">
     		4β. Το Σύστημα δεν μπορεί να αποθηκεύσει τα στοιχεία του χρήστη 
     			<blockquote style="color:black;">
				1.	Το Συστήμα ενημερώνει τον χρήστη ότι δεν μπορεί να αποθηκεύσει τα στοιχεία του.
				2.	Η διαδικασία τερματίζει.
				</blockquote>
			</blockquote>
	</blockquote>
</blockquote>

h3. 3.6 __Υποβολή Αιτήματος Συγκατοίκησης__  

<blockquote style="color:black;">  
    *Πρωτεύων Actor:* Flatmate

    *Ενδιαφερόμενοι:* 
     
		Flatmate: θέλει να εκφράσει ενδιαφέρον και στέλνει αίτημα για κάποιο σπίτι/συγκάτοικο.
		
		Resident: θέλει να ενημερωθεί αν κάποιος έχει υποβάλλει αίτημα και ενδιαφέρεται για την αγγελία του. 
		
	 *Προυποθέσεις:* 
    
    O Flatmate έχει ταυτοποιηθεί από το σύστημα.
	

    <blockquote style="color:black;">  
        *Βασική ροή:*
    
			1.	O flatmate επιλέγει την επιλέγει την αναζήτηση αγγελίας για σπίτι/συγκάτοικο.
			
			2.	Ο flatmate εισάγει τα στοιχεία της αναζήτησης του.
			
			3.	Το σύστημα εμφανίζει τα αποτελέσματα της αναζήτησης του.
			
			4.	Ο flatmate επιλέγει την αγγελία που ταιριάζει περισσότερο στα κριτήριά του.
			
			5.	O flatmate επιλέγει να υποβάλλει αίτημα συγκατοίκησης.
			
			6.	Το σύστημα καταγράφει την υποβολή αίτησης.
			
			7.	Το σύστημα στέλνει το αίτημα στον Resident.
	</blockquote>

    *Εναλλακτικές Ροές:* 
    <blockquote style="color:black;">  
    	<blockquote style="color:black;">  
			* *Tο Σύστημα οποιαδήποτε στιγμή καταρρέει.* 
			* *Ο flatmate μπορεί να ακυρώσει το αίτημα του ανα πάσα στιγμή.* 
			
			
			1.	Ο flatmate εκκινεί το σύστημα.
			
			2.	To σύστημα ταυτοποιεί τον χρήστη. 
			
			3.	Ο flatmate επιλέγει την αναζήτηση αγγελίας.
		</blockquote>
		<blockquote style="color:black;">  
			2α . Ο flatmate τοποθετεί λανθασμένα στοιχεία 
				<blockquote style="color:black;">  
				1.	Tο σύστημα εμφανίζει μήνυμα λάθους.
				2.	Το σύστημα του επιτρέπει να ξαναβάλει τα στοιχεία της αναζήτησης.
			</blockquote>
		</blockquote>
		<blockquote style="color:black;">  
			3α. Το σύστημα δεν εμφάνισε αποτελέσματα στην αναζήτηση του χρήστη.
			<blockquote style="color:black;">  
				1.	Το σύστημα εμφανίζει ότι δε βρέθηκαν στοιχεία.
				2.	Η διαδικασία τερματίζει.
			</blockquote>
		</blockquote>
		
		<blockquote style="color:black;">  
			5α. O flatmate μπορεί να δει τα αιτήματα τα οποία έχει στείλει.
			<blockquote style="color:black;">  
				1.	Το σύστημα εμφανίζει τα απεσταλθέντα αιτήματα.
				2.	Ο flatmate ακυρώνει κάποιο απο τα αιτήματα που έστειλε.
			</blockquote>
		</blockquote>
		
		<blockquote style="color:black;">  
			5β. O flatmate μπορεί να δει τα αιτήματα τα οποία έχει στείλει.
			<blockquote style="color:black;">  
				1.	Το σύστημα εμφανίζει τα απεσταλθέντα αιτήματα.
				2.	Ο flatmate βλέπει τα αιτήματα τα οποία έχουν γίνει αποδεκτά.
			</blockquote>
		</blockquote>
		
		<blockquote style="color:black;">  
			7α. Το σύστημα αδυνατεί να στείλει αίτημα συγκατοίκησης στον Resident.
				<blockquote style="color:black;">  
				1.	Ο flatmate ενημερώνεται για την αδυναμία αποστολής αιτήματος.
				2.	Η διαδικασία τερματίζει. 
			</blockquote>
		</blockquote>

	</blockquote> 
</blockquote>

h2. 4. __Μη λειτουργικές Απαιτήσεις__

<blockquote style="color:black;">  
	
	*1.Διαθεσιμότητα:*
	
	1.Το Σύστημα θα είναι διαθέσιμο 24 ώρες για 7 μέρες την εβδομάδα.
	2.Ο χρόνος μη διαθεσιμότητας δεν θα πρέπει να ξεπερνά 3%.
	
	*2.Ευχρηστία:*
	
	1.Κάθε φορά που εκτελείται μια ενέργεια πρέπει το Σύστημα να ενημερώνει τον χρήστη με μηνύματα στην οθόνη.
	2.Ο χρήστης θα μπορεί να χρησιμοποιεί το σύστημα χώρις να χρειάζεται επιπλέον εκπαίδευση.
	3.Το σύστημα δεν πρέπει να επιτρέπει την εισαγωγή στοιχείων που δεν ικανοποιούν τον τύπο των αντίστοιχων πεδίων.
	
	*3.Ασφάλεια:*
	
	1.Όλες οι λειτουργίες του συστήματος θα πραγματοποιούνται με διαδικασία αυθεντικοποίησης.
	2.Στην πληρωμή της προμήθειας δεν θα αποθηκεύονται δεδομένα πιστωτικής κάρτας στο σύστημα.
	
	*4.Απόδοση:*
	
	1.Η απόκριση της βάσης δεδομένων σε κάθε δοσοληψία δεν θα πρέπει να ξεπερνά τα 3 δευτερόλεπτα.
	2.Το σύστημα θα πρέπει να υποστηρίζει έως και 100 ταυτόχρονους χρήστες.

	*5.Φορητότητα:*
	
	1.Το σύστημα να μπορεί να εκτελείται σε συσκευές με διαφορετικά λειτουργικά συστήματος.

	*6.Aξιοπιστία:*
	
	1.To σύστημα δε θα καταρρέει παραπάνω από 3 φορές μέσα σε ένα χρόνο λειτουργίας του.
	2.Ο χρόνος επανεκκίνησης του συστήματος δεν θα πρέπει να είναι μεγάλος μετά από διακοπή του. 
	


</blockquote>


h2. 5. __DOMAIN MODEL/ΜΟΝΤΕΛΟ ΠΕΔΙΟΥ__

!roommate_DM.jpg!

h2. 6. __PACKAGE DIAGRAM__

!PackageUML.jpg!

h2. 7. __CLASS DIAGRAM__

!ClassDiagram.jpg!

h2. 8. __SEQUENCE DIAGRAMS__

h3. 1. __Sequence Diagram Profile Flatmate Service__

!ProfileFlatmateService.jpg!

h3. 2. __Sequence Diagram Request Service__

!RequestService.jpg!

h3. 3. __Manage Request__

!ManageRequest.jpg!

h2. 9. __STATE DIAGRAM__

!RequestStateTransitions.jpg!

h2. 10. __STATE DIAGRAM RESIDENT__

!ResidentState.jpg!